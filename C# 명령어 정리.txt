Console.Read() = scanf("%c")
Console.ReadLine() = scanf("%s")
Console.Write = printf("\n")
Console.WriteLine = printf("")
{0}, {1}, {2} = %x, %y, %z(x, y, z는 미지수)
"a" + "b" = ab
Console.WriteLine($"v1 = {v1}, v2 = {v2}") = 중괄호 안에 있는 변수값을 출력
4bit => 8bit = 암시적 형변환(자료 손실X)
8bit => 4bit = 명시적 형변환(자료 손실O)(double 변수 x가 있을때 int로 바꾸는법 = (int)x;)
Parse(), TryParse = 문자열 <=> 숫자 변환 (문자열이 숫자가 아닐 때 = Parse = 에러, TryParse = false 반환)
try {} catch = 예외(에러) 발생 시 처리하는 문장
Convert 클래스 = string을 숫자형으로 바꾸는 여러 메소드를 제공
ToString(), ToInt32() = 숫자를 원하는 진수로 처리 ex)ToString(123, 2) = 123을 2진수로 표현한 문자열로 변경
조건연산자(조건) ? true : false;
delimiters={',', ' ', '-'}; s.Split(delimiters); = 빈칸, 콤마, -기호로 문자를 구분
문자열 연결 방법: +연산자 사용, 문자열 보간($), String.Format, String.Concat()과 String.Join()
문자열 검색: Contains() = 특정 문자열이 포함 되어 있으면 true 아니면 false를 반환, IndexOf() = 특정 문자/문자열이
나타나는 인덱스를 리턴(0부터 시작, 문자열이 없으면 -1 리턴), StringComparison = 대소문자 구분하지 않는 비교
열거형(서로 관련 있는 상수들의 집합의 정의) enum : 배열과 비슷함
상수(변하지 않는 값) const, readonly
const : 선언될 떄 값 할당됨, Classname.VariableName 으로 사용, 컴파일 시 값이 결정됨
readonly : 실행될 때/객체가 생성자에 의해 초기화될 때 값 할당됨, Instance.VariableName으로 사용,
런타임(컴퓨터 프로그램이 실행되고 있는동안의 동작) 시 값이 결정됨